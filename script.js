let currentSlide = 0;
const lastSlide = 10;
const numVideos = 1;

//canvas setup
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

//canvas.width=500;
canvas.width=window.innerWidth - 20;
canvas.height = (window.innerHeight) * 0.55;

setSlide();
let text_Y_val = 0;

//key press functionality
document.addEventListener("keydown", function(event) {
    event.preventDefault();
    switch (event.key) {
        case "ArrowLeft":
            switchSlide('L');
            break;
        case "ArrowRight":
            switchSlide('R');
            break;
        case "ArrowUp":
            hideVideo();
            break;
        case "ArrowDown":
            showVideo();
            break;
        default:
            //nothing yet
            break;
    }
});

//functions
function switchSlide(x) {
    switch (x) {
        case 'L':
            //go to previous slide
            if (currentSlide > 0){
                currentSlide -= 1;
                setSlide();
                setSlideSource();
            }
            break;
        case 'R':
            //go to next slide
            if (currentSlide < lastSlide){
                currentSlide += 1;
                setSlide();
                setSlideSource();
            }
            break;
        default:
            //do nothing
            break;
    }
    return true;
}

//clear canvas and apply current slide to canvas. called by switchSlide()
function setSlide() {
    //clear canvas
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    //hide video, buttons
    hideVideo();
    hideButtons();
    //create text gradient
    //gradient & shadow from https://www.html5canvastutorials.com/tutorials/html5-canvas-gradient-text-tutorial/
    ctx.shadowColor = "rgba(83,149,170,0.69)";
    ctx.shadowOffsetX = 10;
    ctx.shadowOffsetY = 10
    ctx.shadowBlur = 10;
    let gradient = ctx.createLinearGradient(0, 0, canvas.width * 0.7, canvas.height * 0.3);
    gradient.addColorStop(0, "rgb(0,185,253)");
    gradient.addColorStop(1, "rgb(15,229,181)");
    ctx.fillStyle = gradient;
    //add slide number to bottom left corner
    if (currentSlide > 0){
        ctx.font="20px Georgia";
        ctx.fillText(String(currentSlide) + "/" + String(lastSlide), canvas.width - 50, canvas.height - 20);
    }
    //apply current slide to canvas
    switch(currentSlide) {
        case 0:
            ctx.font= String(canvas.width * 0.05) + "px Georgia";
            ctx.fillText("AI-Generated Music", canvas.width * 0.1, canvas.height * 0.2);
            ctx.font="20px Georgia";
            ctx.fillText("Raven O'Rourke | PMUS 1001 | Summer 2020", canvas.width * 0.5, canvas.height * 0.8);
            ctx.shadowColor = "transparent";
            ctx.fillText("← Use the left and right arrows on your keyboard to navigate slides →", canvas.width * 0.3, canvas.height * 0.5);
            break;
        case 1:
            text_Y_val = fillSlide("What is it?",
                "Computers and music can interact in a variety of ways. For instance, Spotify uses a machine learning algorithm to create daily",
                "personalized playlists for its users, and Shazam creates an acoustic fingerprint to identify songs from auditory input.");
            newBulletPoint(text_Y_val);
            text_Y_val = fillSlide(" ", " ", " ",
                "This presentation will focus on music generated by artificial intelligence using neural networks. It's basically a computer\'s ",
                "best attempt at creating music, usually based off of \"real music\" input that the computer tries to imitate.");
            break;
        case 2:
            //neural network diagram
            drawImageOnSlide("neuralnetdiagram", 100, 100, 0.4);
            text_Y_val = fillSlide("How is it created?",
                "Artificial neural networks are used to train computers to generate new music.");
            break;
        case 3:
            //neural network diagram
            drawImageOnSlide("neuralnetdiagram", 100, 100, 0.4);
            text_Y_val = fillSlide("How is it created?",
                "Artificial neural networks are used to train computers to generate new music.");
            //text to right of image
            text_Y_val += 30;
            //bulletpoint
            ctx.fillText("→", 525, text_Y_val);
            ctx.fillText("Basically, everything gets represented by a number so that the computer can", 550, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("put it through an algorithm. ", 550, text_Y_val);
            //new bulletpoint
            text_Y_val += 30;
            ctx.fillText("→", 525, text_Y_val);
            ctx.fillText("The computer can be given numbers representing:", 550, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("•", 550, text_Y_val);
            ctx.fillText("Pitch (Example: C = 1, C♯ = 2, D = 3, etc.)", 575, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("•", 550, text_Y_val);
            ctx.fillText("Octave (Example: 1, 2, 3, or 4 representing successively higher octaves)", 575, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("•", 550, text_Y_val);
            ctx.fillText("Note duration", 575, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("•", 550, text_Y_val);
            ctx.fillText("A note's relative position in the song", 575, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("(Example: Current measure number divided by total number of measures)", 575, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("•", 550, text_Y_val);
            ctx.fillText("And much more. Every aspect of music can be represented numerically", 575, text_Y_val);
            text_Y_val += 30;
            ctx.fillText("and used to develop the neural network.", 575, text_Y_val);
            break;
        case 4:
            showButtons();
            fillSlide("History");
            ctx.fillText("Take a guess: when was the first computer-generated composition created?", (canvas.width * 0.5) - 300, (canvas.height * 0.5) - 30 );
            break;
        case 5:
            fillSlide("History", "Believe it or not, the first computer composition was created in 1957!");
            break;
        default:
            ctx.fillText("Slide " + String(currentSlide), 20, 300);
            break;
    }
    return true;
}

//fill generic slide with title and text
function fillSlide(title, l1="", l2="", l3="", l4="", l5="", l6="") {
    //title
    ctx.font= "36px Georgia";
    ctx.fillText(title, 30, 50);

    //text
    ctx.font= "20px Georgia";
    ctx.shadowColor = "transparent";

    let text_Y_val = 90;
    if (l1 !==""){
        ctx.fillText("→ " + l1, 75, text_Y_val);
    }
    if (l2 !== ""){
        text_Y_val += 30;
        ctx.fillText(l2, 100, text_Y_val);
    } else return text_Y_val;
    if (l3 !== ""){
        text_Y_val += 30;
        ctx.fillText(l3, 100, text_Y_val);
    } else return text_Y_val;
    if (l4 !== ""){
        text_Y_val += 30;
        ctx.fillText(l4, 100, text_Y_val);
    } else return text_Y_val;
    if (l5 !== ""){
        text_Y_val += 30;
        ctx.fillText(l5, 100, text_Y_val);
    } else return text_Y_val;
    if (l6 !== ""){
        text_Y_val += 30;
        ctx.fillText(l6, 100, text_Y_val);
    } else return text_Y_val;

}

function newBulletPoint(text_Y_val){
    text_Y_val += 30;
    ctx.fillText("→ ", 75, text_Y_val);
}

//show youtube video with same number as current slide
function showVideo() {
    document.getElementById("vid" + String(currentSlide)).style.visibility="visible";
    return true;
}

//hide all youtube videos
function hideVideo() {
    for (let i = 1; i <= numVideos; i++){
        document.getElementById("vid" + String(i)).style.visibility="hidden";
    }
}

//show buttons below canvas
function showButtons() {
    document.getElementById("buttons").style.display = "inline";
}
//hide buttons below canvas
function hideButtons(){
    document.getElementById("buttons").style.display = "none";
}

//put image on canvas slide. takes address of image, x/y coords for canvas, and percent to multiply size
function drawImageOnSlide(image_id, x_val, y_val, size_pct) {
    let img = document.getElementById(image_id);
    let img_width = img.width * size_pct;
    let img_height = img.height * size_pct;
    ctx.drawImage(img, x_val, y_val, img_width, img_height);
}

//identify source names and links
let num_sources = 2;
let sn1 = "\"Spotify + The Machine: Using Machine Learning to Create Value and Competitive Advantage.\" MBA Student Perspectives, Harvard Business School, 13 Nov. 2018"
let sl1 = "https://digital.hbs.edu/platform-rctom/submission/spotify-the-machine-using-machine-learning-to-create-value-and-competitive-advantage/"
let sn2 = "Company - Shazam. Shazam, www.shazam.com/company. Accessed 22 July 2020.";
let sl2 = "https://www.shazam.com/company";

//change text for slide source under canvas
function setSlideSource(){
    switch(currentSlide){
        case 1:
            document.getElementById("sourcelink1").firstChild.nodeValue = sn1;
            document.getElementById("sourcelink1").setAttribute("href", sl1);
            document.getElementById("sourcelink2").firstChild.nodeValue = sn2;
            document.getElementById("sourcelink2").setAttribute("href", sl2);
            break;
        default:
            document.getElementById("sourcelink1").firstChild.nodeValue = "";
            document.getElementById("sourcelink2").firstChild.nodeValue = "";
            document.getElementById("sourcelink3").firstChild.nodeValue = "";
            break;
    }
}

//behavior for button clicks: go to next slide, display correct if right answer
function clickButton(val){
    switchSlide('R');
    switch(val){
        case 1957:
            ctx.fillStyle = "black";
            ctx.fillRect(0,0,200,70);
            ctx.shadowColor = "rgba(83,149,170,0.69)";
            ctx.shadowOffsetX = 10;
            ctx.shadowOffsetY = 10
            ctx.shadowBlur = 10;
            let gradient = ctx.createLinearGradient(0, 0, canvas.width * 0.7, canvas.height * 0.3);
            gradient.addColorStop(0, "rgb(0,185,253)");
            gradient.addColorStop(1, "rgb(15,229,181)");
            ctx.fillStyle = gradient;
            ctx.font = "50px Georgia"
            ctx.fillText("Correct!", 0, 50);
            break;
        case 1968:
            break;
        case 1991:
            break;
        case 2002:
            break;
        default:
            break;
    }
}